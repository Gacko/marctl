#!/usr/bin/env zsh
# Exit on error.
set -o errexit -o nounset -o pipefail

# Creates a branch.
function __create_branch {
  # Get name.
  name="${1:-$(cat /dev/urandom | LC_ALL=C tr -dc "g-z" | head -c 5 || :)}"

  # Create branch.
  git checkout -b "${name}"
}

# Pushes a branch and creates a pull request.
function __create_pull-request {
  # Get branch.
  branch="${1:-$(git branch --show-current)}"

  # Push branch.
  git push --set-upstream origin "${branch}"

  # Get repository.
  repository="$(git remote get-url origin)"
  repository="${repository#*@}"
  repository="${repository/://}"
  repository="${repository%.git}"

  # Create pull request.
  open "https://${repository}/pull/new/${branch}"
}

# Creates a backup.
function __create_backup {
  # Get volume.
  volume="/Volumes/${1}"

  # Check volume.
  if [ ! -d "${volume}" ]
  then
    # Print usage.
    echo "Usage: ${0} volume"
    # Exit erroneously.
    exit 1
  fi

  # Create backup.
  rsync --verbose --archive --delete "${HOME}/Music/Music/Media.localized/Music" "${HOME}/Pictures" --exclude="Pictures/Photos Library.photoslibrary" "${volume}/"

  # Unmount volume.
  diskutil unmount "${volume}"
}

# Removes trash and lists home.
function __list_home {
  # Clear screen.
  clear

  # Go home.
  cd "${HOME}"

  # Remove trash.
  find "${HOME}" \( -path "${HOME}/.go" -o -path "${HOME}/Library" \) -prune -o -type f \( -name .DS_Store -o -name .lesshst \) -exec rm "{}" +

  # Get directories.
  directories=($(find "${HOME}" -path "${HOME}/Library" -prune -o -mindepth 1 -maxdepth 1 -type d -not \( -name .Trash -o -name .zsh_sessions \) -print))

  # List home.
  ls -lA . ${directories:t} | grep --invert-match ^total
}

# Resets & updates repositories in Documents.
function __update_repositories {
  # Clear screen.
  clear

  # Get repositories.
  repositories=(${@:-$(find "${HOME}/Documents" -mindepth 2 -maxdepth 2 -type d -name .git -exec dirname "{}" + | sort)})

  # Iterate repositories.
  for repository in ${repositories}
  do
    # Go to repository.
    cd "${repository}"

    # Print repository.
    echo "# ${repository:t}"

    # Reset repository.
    git clean --quiet -xd --force
    git reset --quiet --hard
    git checkout --quiet main || git checkout --quiet master

    # Update repository.
    git pull --prune --rebase

    # Check upstream.
    if git remote get-url upstream &> /dev/null
    then
      # Update repository.
      git pull --prune --rebase upstream $(git branch --show-current) 2> /dev/null
      git diff --quiet @{push} || git push --quiet --force
    fi

    # List branches.
    git branch --all

    # Print newline.
    echo
  done
}

# Updates permissions & attributes of media.
function __update_permissions {
  # Update permissions.
  find "${HOME}/Music/Music/Media.localized/Music" ${HOME}/Pictures/20* "${HOME}/Pictures/Lightroom" -type d -not -perm 755 -exec chmod 755 "{}" + -o -type f -not -perm 644 -exec chmod 644 "{}" +

  # Update attributes.
  xattr -cr "${HOME}/Music/Music/Media.localized/Music" ${HOME}/Pictures/20* "${HOME}/Pictures/Lightroom"
}

# Updates documentation of charts.
function __update_documentation {
  # Get root.
  root="${1:-.}"

  # Update documentation.
  helm-docs --chart-search-root "${root}"

  # Get schemas.
  schemas=($(find "${root}" -type f -name "*.schema.json"))

  # Iterate schemas.
  for schema in ${schemas}
  do
    # Get YAML.
    yaml="${schema%.schema.json}.yaml"

    # Update schema.
    helm schema-gen "${yaml}" > "${schema}"
  done
}

# Get verb and object.
verb="${1}"
object="${2}"

# Shift arguments.
shift ; shift

# Call function.
__${verb}_${object} ${@}
